# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="Na]IqvGrS6:wi>1E@u;R1UbZ[KD<]JdT_uVHMg[j`xpvScDgy0FMGoH[DecM=dRH"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=misc.Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

#db.default.driver=com.mysql.jdbc.Driver
#db.default.url="jdbc:mysql://localhost/cloudtimr"
#db.default.user=root
#db.default.pass="a strong password"

# my configuration for slick
slick.db.driver = scala.slick.driver.MySQLDriver

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=WARN

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

logger.app=DEBUG

smtp.host=localhost
smtp.port=25
#smtp.ssl (defaults to no)
#smtp.tls (defaults to no)
#smtp.user (optional)
#smtp.password (optional)

akka.default-dispatcher.fork-join-executor.pool-size-max=64
akka.actor.debug.receive = on

oauth2.provider {
  facebook {
    clientId=166091033581448
    clientSecret=8a3dfcee20fd30093b4fcf34aa3b17a7
  }
  google {
    clientId=461220447949.apps.googleusercontent.com
    clientSecret=qJWpAqAncYTNttHPZT3VgPTg
  }
}

application.lxc.hosts = []
application.lxc.username = "root"
application.lxc.container.interfaces = "/var/lib/lxc/%s/rootfs/etc/network/interfaces"
application.lxc.container.config = "cat /var/lib/lxc/%s/config"

# include custom configuration which can override the above
include "custom"
